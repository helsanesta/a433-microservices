# Versi docker compose
version: "3.7"

# Pendefinisian dua buah service, item-app dan item-db
services:
  item-app:
  # image node yang digunakan
    image: node:14-alpine

  # Menginstal dependencies untuk production dan kemudian build aplikasi.
    command: sh -c "npm install --production --unsafe-perm && npm run build"

  # Mapping port 80 untuk host dan 8080 untuk container
    ports:
      - 80:8080
  # menetapkan /app pada container sebagai working directory
    working_dir: /app

  # menggunakan bind mount untuk memasang current directory di host alih-alih menggunakan full path, di Docker Compose kita bisa memakai relative path) ke /app di container
    volumes:
      - ./:/app

  # Menerapkan restart policy pada berkas docker-compose.yml agar container selalu restart ketika terhenti.
    restart: always

  # menentukan sejumlah environment variable seperti hostname, username, password, dan database name untuk MySQL
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: dicoding
      MYSQL_DB: todo-db

  item-db:
  # image db yang digunakan
    image: mongo:3

  # menggunakan volume app-db (yang didefinisikan pada bagian volume:) dan memasangnya ke directory /data/db di container
    volumes:
      - app-db:/data/db
  
  # Menerapkan restart policy pada berkas docker-compose.yml agar container selalu restart ketika terhenti.
    restart: always
  # menentukan sejumlah environment variable seperti root password dan database name untuk MySQL
    environment:
      MYSQL_ROOT_PASSWORD: dicoding
      MYSQL_DATABASE: todo-db

# membuat volume baru bernama app-db (nantinya menjadi a433-microservices_item-db_1) yang akan digunakan oleh MySQL
volumes:
  app-db: